dependencies:
  cache_directories:
    - ~/.pyenv/versions/3.4.3
    - ~/.pyenv/versions/3.5.1
    - ~/coala-bears/node_modules
    - ~/coala-bears/.bundle
    - ~/coala-bears/vendor
    - ~/.RLibrary
    - ~/dart-sdk/bin
    - ~/.cabal
    - ~/.ghc
    - ~/.ghc-mod
    - ~/infer-linux64-v0.7.0
    - ~/nltk_data
    - ~/pmd-bin-5.4.1
    - ~/.local/share/coala-bears
    - ~/bakalint-0.4.0
    - ~/.julia
    - ~/.local/tailor/
    - ~/.cargo
    - ~/.rustup
  pre:
    - sudo rm -rf /var/cache/apt/archives && sudo ln -s ~/.apt-cache /var/cache/apt/archives && mkdir -p ~/.apt-cache/partial
    - echo 'export PATH=$PATH:~/coala-bears/node_modules/.bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/coala-bears/vendor/bin' >> ~/.circlerc
    - echo 'export LINTR_COMMENT_BOT=false' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/dart-sdk/bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/.cabal/bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/infer-linux64-v0.7.0/infer/bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/pmd-bin-5.4.1/bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/bakalint-0.4.0' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/.local/tailor/tailor-latest/bin' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/elm-format-0.18' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/phpmd' >> ~/.circlerc
    - echo 'export PATH=$PATH:~/.cargo/bin' >> ~/.circlerc
    - echo 'export R_LIB_USER=~/.RLibrary' >> ~/.circlerc
    - sed -i '/source \/home\/ubuntu\/virtualenvs\//d' ~/.circlerc
    - mkdir -p ~/.RLibrary
    - nvm alias default node
  override:
    - bash .ci/deps.cabal.sh
    - bash .ci/deps.sh:
        timeout: 900  # Allow 15 mins before timing out due to "no output"
    - bash .ci/deps.coala-bears.sh

checkout:
  post:
    # Workaround https://github.com/rust-lang/cargo/issues/2078
    #        and https://github.com/rust-lang/cargo/issues/2429 (explanation)
    - git config --global --unset url.ssh://git@github.com:.insteadof

machine:
  java:
    version: oraclejdk8

test:
  override:
    - python setup.py bdist_wheel:
        parallel: true
    - pip install $(ls ./dist/*.whl)"[alldeps]":
        parallel: true
    - bash .ci/tests.sh:
        parallel: true
    - coala-ci -L DEBUG:
        parallel: true
    - bash .ci/deploy.coverage.sh:
        parallel: true
    - rm -rf docs/API && make -C docs clean
    - python setup.py docs:
        parallel: true
